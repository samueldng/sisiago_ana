import { chromium, FullConfig } from '@playwright/test'

async function globalSetup(config: FullConfig) {
  console.log('üöÄ Iniciando setup global dos testes E2E...')
  
  // Configurar vari√°veis de ambiente para testes
  process.env.NODE_ENV = 'test'
  process.env.NEXTAUTH_URL = 'http://localhost:3000'
  
  // Verificar se o servidor est√° rodando
  const browser = await chromium.launch()
  const page = await browser.newPage()
  
  try {
    // Tentar acessar a p√°gina inicial
    await page.goto('http://localhost:3000', { timeout: 30000 })
    console.log('‚úÖ Servidor Next.js est√° rodando')
    
    // Verificar se as rotas principais est√£o acess√≠veis
    const routes = ['/', '/pdv', '/produtos', '/test-scanner']
    
    for (const route of routes) {
      try {
        await page.goto(`http://localhost:3000${route}`, { timeout: 10000 })
        console.log(`‚úÖ Rota ${route} acess√≠vel`)
      } catch (error) {
        console.warn(`‚ö†Ô∏è  Rota ${route} n√£o acess√≠vel:`, error.message)
      }
    }
    
    // Verificar se o banco de dados est√° configurado
    try {
      await page.goto('http://localhost:3000/api/produtos', { timeout: 10000 })
      console.log('‚úÖ API est√° respondendo')
    } catch (error) {
      console.warn('‚ö†Ô∏è  API n√£o est√° respondendo:', error.message)
    }
    
  } catch (error) {
    console.error('‚ùå Erro no setup global:', error.message)
    throw new Error('Servidor Next.js n√£o est√° acess√≠vel. Execute `npm run dev` antes dos testes.')
  } finally {
    await browser.close()
  }
  
  console.log('‚úÖ Setup global conclu√≠do com sucesso!')
}

export default globalSetup